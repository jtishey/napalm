Changes from the main NAPALM release
=====================================

Added NAPALM.py to handle driver import and connection
    USE:  from napalm import NAPALM
          dev = NAPALM.open('hostname')

    Requires 2 custom packages: ltoken and get_os to provide
    information needed by the driver.


Added custom driver extension for IOS to allow "legacy config operations"
    Doesn't follow the abstraction model of NAPALM for configuring
    devices, but the method of copying a config file with specific
    structure and then doing a merge/replace is uncomfortable to me.

    USE: dev.config_commands(['list of', 'config commands'])
    USE: dev.save_config()
    RETURNS: String output from the list of config commands
    DRIVER LOCATION: napalm/custom_napalm/ios.py
    NEW METHOD: config_commands = Type check list and call _send_config_set wrapper
               _send_config_set = Execute via netmiko "send_config_set"
               save_config - Execute "write memory" via netmiko "save_config"


Added napalm/sros to add some basic functionality for Nokia SR-OS
    Modified base.py to not check for enable mode on SROS because of some issues checking that


Modified napalm/ios/ios.py to support "get_bgp_config()" getter already found in junos/iosxr.
    USE: dev.get_bgp_config()
    RETURNS: A dict of bgp config attributes from the device running conifg
    NEW METHOD: get_bgp_config

Modified napalm/helpers.py  to support some functions needed for IOS get_bgp_config getter
    NEW IMPORT: from ciscoconfparse import CiscoConfParse

    NEW FUNCTION: cisco_conf_parse_parents()
    REQUIRES: config_to_parse, parent_line_pattern, child_line_pattern
    RETURNS: A list of parent lines that have a matching child line
    REASON FOR ADDING: input BGP config, 'address-family', neighbor to get the BGP AFI a neighbor is under

    NEW FUNCTION: cisco_conf_parse_objects()
    REQUIRES: config_to_parse, pattern_to_match
    RETURNS: A list of the parent line text and all it's child line text
    REASON FOR ADDING: Get a section of IOS config like "router bgp" or a specific neighbor config

    NEW FUNCTION: regex_find_text()
    REQUIRES: text_to_parse, regex_pattern, match_group
    RETURNS: String of all matched text, or specific match group if used, or empty if no match
    REASON FOR ADDING: Parse IOS config lines for a value similar to TextFSM structure

